{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/dill5446/Paddler/front-end/api/wind_weather.js\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport API from \"../../back-end/routes/app\";\nexport default function PaddleConditions() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(API, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/home/dill5446/Paddler/front-end/api/wind_weather.js"],"names":["API","PaddleConditions","useState","data","setData","flex","padding"],"mappings":";;;;;;AAEA,OAAOA,GAAP;AAEA,eAAe,SAASC,gBAAT,GAA6B;AAAA,kBAEdC,QAAQ,CAAC,EAAD,CAFM;AAAA;AAAA,MAEhCC,IAFgC;AAAA,MAE1BC,OAF0B;;AAcxC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAcH;AAAA","sourcesContent":["// import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\nimport API from '../../back-end/routes/app';\n\nexport default function PaddleConditions () {\n    // const [ isLoading, setLoading ] = useState(true);\n    const [ data, setData ] = useState([]);\n\n    // useEffect(() => {\n    //     fetch('https://api.weather.gov/gridpoints/HFO/229,73')\n    //         .then((response) => response.json())\n    //         .then((json) => setData(json.properties.windSpeed.values))\n    //         .catch((error) => console.error(error))\n    //         .finally(() => setLoading(false))\n    // }, []);\n\n    // setData(response => API(response.json.properties.windSpeed.values))\n\n    return (\n        <View style={{ flex: 1, padding: 24 }}>\n            {/* {isLoading ? <ActivityIndicator/> : ( */}\n                {/* <FlatList\n                    data={data}\n                    keyExtractor={({id}, index) => id}\n                    renderItem={({item}) => (\n                        <Text>{item.validTime}, {item.value}</Text>\n                    )}\n                    /> */}\n            {/* )} */}\n            <API />\n        </View>\n    );\n};"]},"metadata":{},"sourceType":"module"}