When I originally created my promise, I was expecting the promise to resolve synchronously, then run the console.log() function that existed outside of the promise.  Instead, what was happening was that the console.log() function (that existed outside of the promise) was run synchronously, while the promise was added to the microqueue.  The microqueue runs after the synchronous functions.
Don't get too hasty when deleting things!  Make sure everything is saved in git, even if it doesn't work.  It may come in handy later, and you can always revert to the older version if it has been committed.
I was having an issue with the promise not being resolved when I tried to extract the url from the initial get call.  To wait for the promise to resolve, you have to nest the calls.  I did this by making the initial api call within a try{}catch{} statement, then stringing a .then() call onto it so that it would output the response.  From there, I added another .then() with the final api call nested within it.  The final result can be viewed in back-end/routes/app.js
